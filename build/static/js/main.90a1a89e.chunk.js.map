{"version":3,"sources":["services/persons.js","components/Search.js","components/Form.js","components/PhonebookEntry.js","components/PhonebookEntries.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","updatedPerson","put","delete","Search","searchTerm","onSearchTermChange","type","value","onChange","Form","name","number","onNameChange","onNumberChange","onSubmit","PhonebookEntry","entry","onDelete","onClick","PhonebookEntries","entries","map","Notification","notification","className","success","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchTerm","setNotification","useEffect","personService","entriesToShow","filter","person","toLowerCase","includes","event","target","preventDefault","existingEntry","find","window","confirm","setTimeout","catch","error","updatePersons","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90a1a89e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data)\n}\n\nconst create = (newPerson) => {\n  return axios.post(baseUrl, newPerson).then((response) => response.data)\n}\n\nconst update = (id, updatedPerson) => {\n  return axios\n    .put(`${baseUrl}/${id}`, updatedPerson)\n    .then((response) => response.data)\n}\n\nconst _delete = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data)\n}\n\nexport default { getAll, create, update, delete: _delete }\n","import React from 'react'\n\nconst Search = ({ searchTerm, onSearchTermChange }) => {\n  return (\n    <p>\n      filter shown with{' '}\n      <input type=\"search\" value={searchTerm} onChange={onSearchTermChange} />\n    </p>\n  )\n}\n\nexport default Search\n","import React from 'react'\n\nconst Form = ({ name, number, onNameChange, onNumberChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={name} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input value={number} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nconst PhonebookEntry = ({ entry, onDelete }) => {\n  const handleDelete = () => {\n    onDelete(entry)\n  }\n\n  return (\n    <li>\n      {entry.name} {entry.number} <button onClick={handleDelete}>delete</button>\n    </li>\n  )\n}\n\nexport default PhonebookEntry\n","import React from 'react'\nimport PhonebookEntry from './PhonebookEntry'\n\nconst PhonebookEntries = ({ entries, onDelete }) => {\n  return (\n    <ul>\n      {entries.map((entry) => (\n        <PhonebookEntry entry={entry} onDelete={onDelete} key={entry.name} />\n      ))}\n    </ul>\n  )\n}\n\nexport default PhonebookEntries\n","import React from 'react'\n\nconst Notification = ({ notification }) => {\n  if (!notification) return null\n\n  const className = `notification ${\n    notification.success ? 'notification__success' : 'notification__failure'\n  }`\n  return <div className={className}>{notification.message}</div>\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Search from './components/Search'\nimport Form from './components/Form'\nimport PhonebookEntries from './components/PhonebookEntries'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then((persons) => setPersons(persons))\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchTermChange = (event) => {\n    setSearchTerm(event.target.value)\n  }\n\n  const handleDelete = ({ id, name }) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .delete(id)\n        .catch(() => {\n          setNotification({\n            success: false,\n            message: `Information of ${name} has already been removed from server`,\n          })\n          setTimeout(() => {\n            setNotification('')\n          }, 5000)\n        })\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id))\n        })\n    }\n  }\n\n  const updatePersons = (existingEntry) => {\n    const willUpdateNumber = window.confirm(\n      `${newName} is already added to phonebook, replace the current number with a new one?`\n    )\n\n    if (!willUpdateNumber) return\n\n    personService\n      .update(existingEntry.id, { ...existingEntry, number: newNumber })\n      .then((updatedPerson) => {\n        setNotification({\n          success: true,\n          message: `Updated ${updatedPerson.name}`,\n        })\n        setTimeout(() => {\n          setNotification('')\n        }, 5000)\n        setPersons(\n          persons.map((person) =>\n            person.id === existingEntry.id ? updatedPerson : person\n          )\n        )\n      })\n      .catch((error) => {\n        setNotification({\n          success: false,\n          message: error.response.data.error,\n        })\n        setTimeout(() => {\n          setNotification('')\n        }, 5000)\n      })\n  }\n\n  const addPerson = () => {\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n    personService\n      .create(newPerson)\n      .then((person) => {\n        setNotification({\n          success: true,\n          message: `Added ${person.name}`,\n        })\n        setTimeout(() => {\n          setNotification('')\n        }, 5000)\n        setPersons(persons.concat(person))\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch((error) => {\n        setNotification({\n          success: false,\n          message: error.response.data.error,\n        })\n        setTimeout(() => {\n          setNotification('')\n        }, 5000)\n      })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const existingEntry = persons.find((person) => person.name === newName)\n    if (existingEntry) {\n      updatePersons(existingEntry)\n    } else {\n      addPerson()\n    }\n  }\n\n  const entriesToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(searchTerm.toLowerCase())\n  )\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={notification} />\n      <Search\n        searchTerm={searchTerm}\n        onSearchTermChange={handleSearchTermChange}\n      />\n\n      <h2>Add an entry</h2>\n      <Form\n        name={newName}\n        number={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        onSubmit={handleSubmit}\n      />\n\n      <h2>Numbers</h2>\n      <PhonebookEntries entries={entriesToShow} onDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}